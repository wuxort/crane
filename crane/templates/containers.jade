.container
  div(ng-show="loading")
    .glyphicon.glyphicon-refresh.glyphicon-refresh-animate
    span &nbsp; Loading
  table.table.table-striped
    thead
      td Name
      td Image
      td Command
      td State
      td Host
    tbody(ng-repeat="container in containers")
     tr
      td [[container.name]]
        br
        .btn-group.btn-group.xs
          .btn.btn-xs.btn-default.glyphicon.glyphicon-stats(ng-click="container_details(container)")
          .btn.btn-xs.btn-default.glyphicon.glyphicon-th-list(ng-click="container_logs(container)")
      td [[container.image]]
      td [[container.cmd]]
      td [[container.state]]
      td [[container.hostname]]
      td(ng-show="container.state == 'Running'")
        .btn.btn-large.btn-warning(ng-show="container.stopping") 
          .glyphicon.glyphicon-refresh.glyphicon-refresh-animate 
          span Stopping
        .btn.btn-large.btn-warning(ng-click="stop_container(container)",ng-show="!container.stopping") Stop
      td(ng-show="container.state != 'Running'")
        .btn-group
          .btn.btn-large.btn-success(ng-click="start_container(container)",ng-show="!container.starting" ) Start
          .btn.btn-large.btn-success(ng-show="container.starting") 
            .glyphicon.glyphicon-refresh.glyphicon-refresh-animate 
            span Starting
          .btn.btn-large.btn-danger(ng-click="remove_container(container)") Delete
     tr
      td(colspan=6,ng-show="container.details.active")
        pre [[container.details.data | json]]
     tr
      td(colspan=6,ng-show="container.logs.active")
        p 
        | Showing only the last 200 log lines. Click 
        a(href="/host/[[container.hostid]]/container/[[container.id]]/fulllog") here
        |  to view full log
        pre [[container.logs.data]]

   
  .btn.btn-large.btn-primary(ng-click="start_deploy()") Deploy container
  .btn.btn-large.btn-primary(ng-click="load_containers()") Refresh
  form.form-horizontal(ng-show="(add_container.status == 'active')",role="form")
    .form-group
      label.control-label.col-sm-2(for="dtype") Deployment type:
      .col-sm-3
         select#dtype(ng-model="deployment_type")
           option(ng-repeat="deployment_type in deployment_types") [[deployment_type]]
    div(ng-switch="deployment_type")
      div(ng-switch-when="Raw")
        .form-group
          label.control-label.col-sm-2(for="name") Name:
          .col-sm-3
            input#name.form-control(ng-model="add_container.container.name")
        .form-group
          label.control-label.col-sm-2(for="image") Image:
          .col-sm-3.input-group
            input#image.form-control(ng-model="add_container.container.image")
            span.input-group-btn
              button.btn.btn-default.glyphicon.glyphicon-search(ng-click="search_dialog()")
        .form-group
          label.control-label.col-sm-2(for="host") Host:
          .col-sm-3
            select#host.form-control(ng-options="host.id as host.name for host in hosts" ng-model="add_container.container.host")
        .form-group
          label.control-label.col-sm-2(for="hostname") Hostname for container:
          .col-sm-3
            input#hostname.form-control(ng-model="add_container.container.hostname")
        .form-group
          label.control-label.col-sm-2(for="environment") Environment variables (eg: name1=value1 name2=value2):
          .col-sm-3
            textarea#environment.form-control(ng-model="add_container.container.environment")
        .form-group
          label.control-label.col-sm-2(for="portmapping") Portmapping (eg: port1:port2 port3:port4):
          .col-sm-3
            textarea#portmapping.form-control(ng-model="add_container.container.portmapping")
        .form-group
          label.control-label.col-sm-2(for="volumes") Volumes (eg: hostdir1:containerdir1 hostdir2:containerdir2):
          .col-sm-3
            textarea#volumes.form-control(ng-model="add_container.container.volumes")
        .form-group
          label.control-label.col-sm-2(for="capabilities") Capabilities (eg: capability1 capability2):
          .col-sm-3
            textarea#capabilities.form-control(ng-model="add_container.container.capabilities")
        .form-group
          label.control-label.col-sm-2(for="restart") Restart policy:
          .col-sm-3
            select#restart.form-control(ng-options="restart_policy for restart_policy in restart_policies" ng-model="add_container.container.restart") 
        .form-group
          label.control-label.col-sm-2(for="command") Command:
          .col-sm-3
            input#command.form-control(ng-model="add_container.container.command")
      div(ng-switch-when="Template")
        .form-group
           label.control-label.col-sm-2(for="ctemplate") Template:
           .col-sm-3
              select#ctemplate(ng-model="add_container.selected_template",ng-options="template as template.name for template in templates" )
        .form-group
          label.control-label.col-sm-2(for="host") Host:
          .col-sm-3
            select#host.form-control(ng-options="host.id as host.name for host in hosts" ng-model="add_container.container.host")
        .form-group(ng-repeat="parameter in add_container.selected_template.parameters") 
           label.control-label.col-sm-2 [[parameter.name]]:
           .col-sm-3
              input.form-control(ng-model="add_container.template[parameter.name]")
          
    .btn.btn-large.btn-success(ng-click="deploy_container()") Deploy
    .btn.btn-large.btn-info(ng-click="cancel_deploy()") Cancel
  div(ng-show="(add_container.status == 'deploying')") Deploying...
  div(ng-show="(add_container.status == 'finished')") Finished
    div(ng-show="add_container.finish_error") 
      pre.alert.alert-danger [[add_container.output | json ]]
